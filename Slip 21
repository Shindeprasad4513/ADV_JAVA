//1.Write a java program to accept ‘N’ Subject Names from a user store them into LinkedList Collection and Display them by using Iterator interface. [10 M]

package prasad;
import java.util.*;
public class slip21a 
{
   public static void main(String[] args) {
	int n;
	Scanner sc=new Scanner(System.in);
	System.out.println("Enter no of Subjects:");
	n=sc.nextInt();
	LinkedList sub=new LinkedList();
	System.out.println("Enter "+n+" Subjects:");
	for(int i=0;i<n;i++)
	{
		sub.add(sc.next());
	}
	System.out.println("Subjects Are::");
	Iterator it=sub.iterator();
	while(it.hasNext())
	{
		System.out.println(it.next());
	}
	
	
  }
}


//2.Write a java program to solve producer consumer problem in which a producer produces a value and consumer consume the value before producer generate the next value. (Hint: use thread synchronization)

package prasad;
import java.util.*;
class producer extends Thread
{
	product p;
	producer(product p)
	{
		this.p=p;
	}
	public void run()
	{
		for(int i=1;i<=5;i++)
		{
			try 
			{
               p.produce(i);				
			}catch(Exception e)
			{
				System.out.println(e);
			}
		}
	}
}
class consumer extends Thread
{
	product p;
	public consumer(product p)
	{
		this.p=p;
	}
	public void run()
	{
		for(int i=1;i<=5;i++)
		{
			try 
			{
				p.consume(i);
			}catch(Exception e)
			{
				System.out.println(e);
			}
		}
	}
}


class product 
{
   boolean chance;
   synchronized void produce(int i)throws InterruptedException
   {
	   if(chance)
	   {
		   wait();
	   }
	   chance=true;
	   notify();
	   System.out.println("Produce "+i+" value");
   }
   synchronized void consume(int i)throws InterruptedException
   {
	   if(!chance)
	   {
		   wait();
	   }
	   chance=false;
	   notify();
	   System.out.println("Consume "+i+" value");
   }
}
 
public class slip20b 
{
	public static void main(String[] args) 
	{
       product p=new product();
       producer t1=new producer(p);
       consumer t2=new consumer(p);
       t1.start();t2.start();
	}
}



